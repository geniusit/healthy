// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src/pages/StatusPage render default render should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <StatusPage
    apis={
      Array [
        Object {
          "endpoint": "https://google.com",
          "name": "Api 1",
        },
        Object {
          "endpoint": "https://yahoo.com",
          "name": "Api 2",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <PageStatus
          hasError={false}
        />,
        Array [
          <StatusRow
            className="first"
            hasError={false}
            name="Api 1"
          />,
          <StatusRow
            className=""
            hasError={false}
            name="Api 2"
          />,
        ],
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "hasError": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "Api 1https://google.com",
        "nodeType": "function",
        "props": Object {
          "className": "first",
          "hasError": false,
          "name": "Api 1",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "Api 2https://yahoo.com",
        "nodeType": "function",
        "props": Object {
          "className": "",
          "hasError": false,
          "name": "Api 2",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "__emotion_base": "div",
      "__emotion_forwardProp": undefined,
      "__emotion_real": [Circular],
      "__emotion_styles": Array [
        "
  width: 100%;
  max-width: 800px;
  margin: 60px auto;
",
      ],
      "defaultProps": undefined,
      "displayName": "Styled(div)",
      "render": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <PageStatus
            hasError={false}
          />,
          Array [
            <StatusRow
              className="first"
              hasError={false}
              name="Api 1"
            />,
            <StatusRow
              className=""
              hasError={false}
              name="Api 2"
            />,
          ],
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "hasError": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "Api 1https://google.com",
          "nodeType": "function",
          "props": Object {
            "className": "first",
            "hasError": false,
            "name": "Api 1",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "Api 2https://yahoo.com",
          "nodeType": "function",
          "props": Object {
            "className": "",
            "hasError": false,
            "name": "Api 2",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "div",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          "
  width: 100%;
  max-width: 800px;
  margin: 60px auto;
",
        ],
        "defaultProps": undefined,
        "displayName": "Styled(div)",
        "render": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
